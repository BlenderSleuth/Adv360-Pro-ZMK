#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define ___ &trans
#define xxx &none
#define BRWS_BCK &kp LA(LEFT_ARROW)
#define BRWS_FWD &kp LA(RIGHT_ARROW)

// Dev commands (from Visual Studio keymap)
#define BUILD &kp LC(LS(B))
#define DEBUG &kp LA(F5)
#define RUN &kp LS(F5)
#define TOG_BKPT &kp F9
#define STEP_INTO &kp F11
#define STEP_OVER &kp F10
#define STEP_OUT &kp LS(F11)
#define GO_DEF &kp F12
#define GO_SUP &kp LA(HOME)
#define GO_FILE &kp LC(LS(T))
#define SW_HD_SRC &kp LA(O)
#define RS_FMT &kp LC(LA(ENTER))

#define COLEMAK 0
#define EXTD 1
#define SYMB 2
#define DEV 3
#define KEYPAD 4
#define MEDIA 5
#define FN 6
#define MOD 7

/ {
  behaviors {
    #include "macros.dtsi"

    #include "version.dtsi"
    #ifndef VERSION_MACRO
    macro_ver: macro_ver {
      compatible = "zmk,behavior-macro";
      label = "macro_version";
      #binding-cells = <0>;
      bindings = <&kp RET>;
    };
    #endif

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    fmt_clean: fmt_clean {
      compatible = "zmk,behavior-macro";
      label = "format and clean";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LC(E)>, <&macro_tap &kp C>, <&macro_release &kp LC(E)>;
    };

    cllps_def: cllps_def {
      compatible = "zmk,behavior-macro";
      label = "collapse to definitions";
      #binding-cells = <0>;
      bindings = <&macro_press &kp LC(M)>, <&macro_tap &kp O>, <&macro_release &kp LC(M)>;
    };

    mm_sdq: single_double_quote {
      compatible = "zmk,behavior-mod-morph";
      label = "SINGLE_DOUBLE_QUOTE";
      #binding-cells = <0>;
      bindings = <&macro_quotes>, <&macro_dquotes>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mm_brc: mod_morph_braces {
      compatible = "zmk,behavior-mod-morph";
      label = "BRACES";
      #binding-cells = <0>;
      bindings = <&kp LBRC>, <&kp RBRC>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    mm_par: mod_morph_parens {
      compatible = "zmk,behavior-mod-morph";
      label = "PARENTHESES";
      #binding-cells = <0>;
      bindings = <&kp LPAR>, <&kp RPAR>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    mm_bkt: mod_morph_brackets {
      compatible = "zmk,behavior-mod-morph";
      label = "BRACKETS";
      #binding-cells = <0>;
      bindings = <&kp LBKT>, <&kp RBKT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    mm_para: mod_morph_paragraph {
      compatible = "zmk,behavior-mod-morph";
      label = "PARAGRAPH";
      #binding-cells = <0>;
      bindings = <&kp LC(UP)>, <&kp LC(DOWN)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    mm_ineq: mod_morph_inequalities {
      compatible = "zmk,behavior-mod-morph";
      label = "INEQUALITIES";
      #binding-cells = <0>;
      bindings = <&kp LT>, <&kp GT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    mm_pgnav: mod_morph_page_navigation {
      compatible = "zmk,behavior-mod-morph";
      label = "PAGE_NAVIGATION";
      #binding-cells = <0>;
      bindings = <&kp LC(PG_UP)>, <&kp LC(PG_DN)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    // Home row mods
    // &kp ESC   &hm LGUI A &hm LALT R &hm LSHFT S &hm LCTRL T &kp G  xxx             &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           xxx     &kp M   &hm RCTRL N &hm RSHFT E &hm RALT I &hm RGUI O &kp SQT


    colemak {
      bindings = <
        &kp EQUAL  &kp N1     &kp N2     &kp N3      &kp N4      &kp N5 &mo KEYPAD                                                       &mo MOD &kp N6  &kp N7      &kp N8      &kp N9     &kp N0     &kp MINUS
        &kp TAB    &kp Q      &kp W      &kp F       &kp P       &kp B  xxx                                                              xxx     &kp J   &kp L       &kp U       &kp Y      &kp SEMI   &kp BSLH
        &kp ESC    &kp A      &kp R      &kp S       &kp T       &kp G  xxx             &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           xxx     &kp M   &kp N       &kp E       &kp I      &kp O      &kp SQT
        &mo DEV    &kp Z      &kp X      &kp C       &kp D       &kp V                            &kp HOME &kp END                               &kp K   &kp H       &kp COMMA   &kp DOT    &kp FSLH   &mo SYMB
        &mo KEYPAD &kp GRAVE  &kp CAPS   &kp LEFT    &kp RIGHT               &kp LSHIFT &mo EXTD  &kp BSPC &kp DEL   &kp ENTER &kp SPACE                 &kp UP      &kp DOWN    &kp LBKT   &kp RBKT   &mo MEDIA
      >;
    };
    extend {
      bindings = <
        ___       &kp F1    &kp F2       &kp F3     &kp F4    &kp F5        &kp F6                                           &kp F7    &kp F8    &kp F9    &kp F10    &kp F11   &kp F12  ___
        ___       &kp ESC   &kp LC(LEFT) xxx        &kp HOME  &kp LC(RIGHT) xxx                                              xxx       &kp PG_UP xxx       xxx        xxx       xxx      ___
        ___       xxx       xxx          &kp LC(S)  xxx       &mm_pgnav     xxx           ___    ___    ___    ___           xxx       &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT xxx      ___
        ___       &kp LC(Z) &kp LC(X)    &kp LC(C)  &kp BSPC  &kp LC(V)                          ___    ___                            &kp PG_DN xxx       xxx        xxx       xxx      ___
        ___       xxx       xxx          xxx        xxx                            ___    ___    ___    ___    ___    ___                        xxx       xxx        xxx       xxx      ___
      >;
    };
    symbols {
      bindings = <
        ___       &kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &kp F6                                       &kp F7  &kp F8    &kp F9    &kp F10    &kp F11   &kp F12    ___
        &kp GRAVE &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   xxx                                          xxx     xxx       xxx       &kp MINUS  &kp EQUAL xxx        ___
        ___       &kp CARET &kp AMPS  &kp LBRC  &kp LPAR  &kp LBKT    xxx       ___    ___    ___    ___           xxx     &kp RBKT  &kp RPAR  &kp RBRC   &kp SEMI  &kp SQT    ___
        ___       &kp STAR  &kp UNDER &kp RBRC  &kp RPAR  &kp RBKT                     ___    ___                          xxx       &kp COMMA &kp DOT    &kp FSLH  &kp BSLH   ___
        ___       ___       ___       ___       ___                      ___    ___    ___    ___    ___    ___                      ___       ___        ___       ___        ___
      >;
    };
    dev {
      bindings = <
        ___       &kp F1    &kp F2    &kp F3    &kp F4    &kp F5      &kp F6                                       &kp F7  &kp F8    &kp F9    &kp F10   &kp F11   &kp F12     ___
        ___       ___       ___       ___       &fmt_clean ___        xxx                                          xxx     STEP_INTO STEP_OVER STEP_OUT  ___       ___         ___
        ___       ___       GO_SUP    GO_FILE   GO_DEF    SW_HD_SRC   xxx       ___    ___    ___    ___           xxx     TOG_BKPT  DEBUG     RUN       BUILD     &cllps_def  ___
        ___       ___       ___       ___       ___       ___                          ___    ___                          ___       ___       ___       ___       ___         ___
        ___       ___       ___       ___       ___                      ___    ___    ___    ___    ___    ___                      ___       ___       ___       ___         ___
      >;
    };
    keypad {
      bindings = <
        ___       ___       ___      ___      ___        ___    ___                                                              ___   ___    &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS
        ___       ___       ___      ___      ___        ___    xxx                                                              xxx   ___    &kp KP_N7  &kp KP_N8     &kp KP_N9       &kp KP_PLUS    ___
        ___       ___       ___      ___      ___        ___    xxx             ___       ___      ___       ___                 xxx   ___    &kp KP_N4  &kp KP_N5     &kp KP_N6       &kp KP_PLUS    ___
        ___       ___       ___      ___      ___        ___                              ___      ___                                 ___    &kp KP_N1  &kp KP_N2     &kp KP_N3       &kp KP_ENTER   ___
        ___       ___       ___      ___      ___                      ___      ___       ___      ___       ___       ___                    &kp KP_N0  &kp KP_N0     &kp KP_DOT      &kp KP_ENTER   ___
      >;
    };
    media {
      bindings = <
        ___  &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &kp C_PREV ___                                              ___  &kp C_NEXT &kp C_FF &kp C_RW &kp C_BRI_DN &kp C_BRI_UP  ___
        ___  ___        ___          ___          ___      ___        xxx                                              xxx  ___        ___      ___      ___          ___           ___
        ___  ___        ___          ___          ___      ___        xxx           ___    ___    ___    ___           xxx  ___        ___      ___      ___          ___           ___
        ___  ___        ___          ___          ___      ___                             ___    ___                       ___        ___      ___      ___          ___           ___
        ___  ___        ___          ___          ___                        ___    ___    ___    ___    ___    ___                    ___      ___      ___          ___           ___
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 ___                                              ___   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        ___    ___    ___    ___    ___    ___    xxx                                              xxx   ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___    ___    xxx           ___    ___    ___    ___           xxx   ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___    ___                         ___    ___                        ___    ___    ___    ___     ___     ___
        ___    ___    ___    ___    ___                  ___    ___    ___    ___    ___    ___                 ___    ___    ___     ___     ___
      >;
    };
    mod {
      bindings = <
        xxx   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 xxx                                                                       ___                    xxx          xxx          xxx          xxx   xxx   xxx
        xxx   xxx          xxx          xxx          xxx          xxx          &bootloader                                                               &bootloader            xxx          xxx          xxx          xxx   xxx   xxx
        xxx   xxx          xxx          xxx          xxx          xxx          xxx                     xxx   xxx   &bt BT_CLR xxx                        &rgb_ug RGB_MEFS_CMD 5 xxx          xxx          xxx          xxx   xxx   xxx
        xxx   xxx          xxx          xxx          &macro_ver   xxx                                        xxx   xxx                                                          xxx          xxx          xxx          xxx   xxx   xxx
        xxx   xxx          xxx          xxx          xxx                                         xxx   xxx   xxx   xxx        &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   xxx   xxx   xxx
      >;
    };
  };
};
